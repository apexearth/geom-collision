!function e(t,r,x){function n(u,i){if(!r[u]){if(!t[u]){var l="function"==typeof require&&require;if(!i&&l)return l(u,!0);if(y)return y(u,!0);var s=new Error("Cannot find module '"+u+"'");throw s.code="MODULE_NOT_FOUND",s}var o=r[u]={exports:{}};t[u][0].call(o.exports,function(e){var r=t[u][1][e];return n(r?r:e)},o,o.exports,e,t,r,x)}return r[u].exports}for(var y="function"==typeof require&&require,u=0;u<x.length;u++)n(x[u]);return n}({1:[function(e,t,r){function x(e,t,r){return e*(1-r)+t*r}t.exports=x},{}],2:[function(e,t,r){function x(e,t,r,x){var n=x.x-r.x,y=x.y-r.y,u=t.x-e.x,i=t.y-e.y,l=e.x-r.x,o=e.y-r.y,c=y*u-n*i;if(0===c)return n*o-y*l!==0&&u*o-i*l!==0||e.x<r.x&&e.x<x.x&&t.x<r.x&&t.x<x.x||e.y<r.y&&e.y<x.y&&t.y<r.y&&t.y<x.y||e.x>r.x&&e.x>x.x&&t.x>r.x&&t.x>x.x||e.y>r.y&&e.y>x.y&&t.y>r.y&&t.y>x.y?{result:s.PARALLEL}:{x:1/0,y:1/0,result:s.COINCIDE};var E=(n*o-y*l)/c,a=(u*o-i*l)/c;return E>=0&&1>=E&&a>=0&&1>=a?{x:e.x+E*u,y:e.y+E*i,result:s.INTERSECT}:{result:s.OUTSIDE}}function n(e,t,r,x){var n=t.x-e.x,y=t.y-e.y,u=n*n+y*y,i=e.x-r.x,o=2*(n*i+y*(e.y-r.y)),c=r.x*r.x+r.y*r.y+e.x*e.x+e.y*e.y-2*(r.x*e.x+r.y*e.y)-x*x,E=o*o-4*u*c,a={entry:null,exit:null,tangent:null,intersections:[],result:null};if(0>E)a.result=s.OUTSIDE;else if(0===E){a.result=s.TANGENT;var T=-o/(2*u);a.tangent={x:l(e.x,t.x,T),y:l(e.y,t.y,T)}}else{var f=Math.sqrt(E),I=(-o+f)/(2*u),N=(-o-f)/(2*u);(0>I||I>1)&&(0>N||N>1)?a.result=0>I&&0>N||I>1&&N>1?s.OUTSIDE:s.INSIDE:(a.result=s.INTERSECT,I>=0&&1>=I&&(a.entry={x:l(e.x,t.x,I),y:l(e.y,t.y,I)},a.intersections.push(a.entry)),N>=0&&1>=N&&(a.exit={x:l(e.x,t.x,N),y:l(e.y,t.y,N)},a.intersections.push(a.exit)))}return a}function y(e,t,r,x){for(var y=[n(e,{x:t.x,y:e.y},r,x),n({x:t.x,y:e.y},t,r,x),n({x:e.x,y:t.y},{x:t.x,y:t.y},r,x),n({x:e.x,y:e.y},{x:e.x,y:t.y},r,x)],u={result:null,intersections:[],tangents:[]},i=4;i--;){var l=y[i];(null===u.result||u.result===s.INSIDE&&l.result===s.INTERSECT||u.result===s.TANGENT&&(l.result===s.INTERSECT||l.result===s.INSIDE)||u.result===s.OUTSIDE)&&(u.result=l.result),l.intersections.length>0&&(u.intersections=u.intersections.concat(l.intersections)),l.result===s.TANGENT&&u.tangents.push(l.tangent)}return u}function u(e,t,r){return t.x>e.x||r.x<e.x||t.y>e.y||r.y<e.y?{result:s.OUTSIDE}:{result:s.INSIDE}}function i(e,t,r,x){if(e.x>t.x||e.y>t.y){var n={x:e.x>t.x?t.x:e.x,y:e.y>t.y?t.y:e.y},y={x:e.x<t.x?t.x:e.x,y:e.y<t.y?t.y:e.y};e=n,t=y}if(r.x>x.x||r.y>x.y){var u={x:r.x>x.x?x.x:r.x,y:r.y>x.y?x.y:r.y},i={x:r.x<x.x?x.x:r.x,y:r.y<x.y?x.y:r.y};r=u,x=i}return e.x>x.x||t.x<r.x||e.y>x.y||t.y<r.y?{result:s.OUTSIDE}:{result:s.INTERSECT}}var l=e("lerp"),s=t.exports={lineLine:x,lineCircle:n,rectangleCircleSimple:y,pointRectangleSimple:u,rectangleRectangleSimple:i,INTERSECT:"intersect",INSIDE:"inside",OUTSIDE:"outside",COINCIDE:"coincide",PARALLEL:"parallel",TANGENT:"tangent"}},{lerp:1}]},{},[2]);
!function e(t,r,n){function x(i,l){if(!r[i]){if(!t[i]){var u="function"==typeof require&&require;if(!l&&u)return u(i,!0);if(y)return y(i,!0);var s=new Error("Cannot find module '"+i+"'");throw s.code="MODULE_NOT_FOUND",s}var o=r[i]={exports:{}};t[i][0].call(o.exports,function(e){var r=t[i][1][e];return x(r?r:e)},o,o.exports,e,t,r,n)}return r[i].exports}for(var y="function"==typeof require&&require,i=0;i<n.length;i++)x(n[i]);return x}({1:[function(e,t,r){function n(e,t,r){return e*(1-r)+t*r}t.exports=n},{}],2:[function(e,t,r){function n(e,t,r,n){var x=n.x-r.x,y=n.y-r.y,i=t.x-e.x,l=t.y-e.y,u=e.x-r.x,o=e.y-r.y,E=y*i-x*l;if(0===E)return x*o-y*u!==0&&i*o-l*u!==0||e.x<r.x&&e.x<n.x&&t.x<r.x&&t.x<n.x||e.y<r.y&&e.y<n.y&&t.y<r.y&&t.y<n.y||e.x>r.x&&e.x>n.x&&t.x>r.x&&t.x>n.x||e.y>r.y&&e.y>n.y&&t.y>r.y&&t.y>n.y?{result:s.PARALLEL}:{x:1/0,y:1/0,result:s.COINCIDE};var c=(x*o-y*u)/E,I=(i*o-l*u)/E;return c>=0&&1>=c&&I>=0&&1>=I?{x:e.x+c*i,y:e.y+c*l,result:s.INTERSECT}:{result:s.OUTSIDE}}function x(e,t,r,n){var x=t.x-e.x,y=t.y-e.y,i=x*x+y*y,l=e.x-r.x,o=2*(x*l+y*(e.y-r.y)),E=r.x*r.x+r.y*r.y+e.x*e.x+e.y*e.y-2*(r.x*e.x+r.y*e.y)-n*n,c=o*o-4*i*E,I={entry:null,exit:null,tangent:null,intersections:[],result:null};if(0>c)I.result=s.OUTSIDE;else if(0===c){I.result=s.TANGENT;var T=-o/(2*i);I.tangent={x:u(e.x,t.x,T),y:u(e.y,t.y,T)}}else{var a=Math.sqrt(c),N=(-o+a)/(2*i),f=(-o-a)/(2*i);(0>N||N>1)&&(0>f||f>1)?I.result=0>N&&0>f||N>1&&f>1?s.OUTSIDE:s.INSIDE:(I.result=s.INTERSECT,N>=0&&1>=N&&(I.entry={x:u(e.x,t.x,N),y:u(e.y,t.y,N)},I.intersections.push(I.entry)),f>=0&&1>=f&&(I.exit={x:u(e.x,t.x,f),y:u(e.y,t.y,f)},I.intersections.push(I.exit)))}return I}function y(e,t,r,n){for(var y=[x(e,{x:t.x,y:e.y},r,n),x({x:t.x,y:e.y},t,r,n),x({x:e.x,y:t.y},{x:t.x,y:t.y},r,n),x({x:e.x,y:e.y},{x:e.x,y:t.y},r,n)],i={result:null,intersections:[],tangents:[]},l=4;l--;){var u=y[l];(null===i.result||i.result===s.INSIDE&&u.result===s.INTERSECT||i.result===s.TANGENT&&(u.result===s.INTERSECT||u.result===s.INSIDE)||i.result===s.OUTSIDE)&&(i.result=u.result),u.intersections.length>0&&(i.intersections=i.intersections.concat(u.intersections)),u.result===s.TANGENT&&i.tangents.push(u.tangent)}return i}function i(e,t,r){return t.x>e.x||r.x<e.x||t.y>e.y||r.y<e.y?{result:s.OUTSIDE}:{result:s.INSIDE}}function l(e,t,r,n){if(e.x>t.x||e.y>t.y){var x={x:e.x>t.x?t.x:e.x,y:e.y>t.y?t.y:e.y},y={x:e.x<t.x?t.x:e.x,y:e.y<t.y?t.y:e.y};e=x,t=y}if(r.x>n.x||r.y>n.y){var i={x:r.x>n.x?n.x:r.x,y:r.y>n.y?n.y:r.y},l={x:r.x<n.x?n.x:r.x,y:r.y<n.y?n.y:r.y};r=i,n=l}return e.x>n.x||t.x<r.x||e.y>n.y||t.y<r.y?{result:s.OUTSIDE}:{result:s.INTERSECT}}var u=e("lerp"),s=t.exports={lineLine:n,lineCircle:x,rectangleCircleSimple:y,pointRectangleSimple:i,rectangleRectangleSimple:l,INTERSECT:"intersect",INSIDE:"inside",OUTSIDE:"outside",COINCIDE:"coincide",PARALLEL:"parallel",TANGENT:"tangent"}},{lerp:1}],3:[function(e,t,r){var n=e("./collision"),x=e("./xywh");n.xywh=x,t.exports=n},{"./collision":2,"./xywh":4}],4:[function(e,t,r){function n(e){return{x:e.x+e.width,y:e.y+e.height}}function x(e,t){return y.rectangleRectangleSimple(e,n(e),t,n(t))}var y=e("./collision");t.exports={rectangleRectangleSimple:x,INTERSECT:y.INTERSECT,INSIDE:y.INSIDE,OUTSIDE:y.OUTSIDE,COINCIDE:y.COINCIDE,PARALLEL:y.PARALLEL,TANGENT:y.TANGENT}},{"./collision":2}]},{},[3]);
!function e(t,r,n){function x(i,l){if(!r[i]){if(!t[i]){var u="function"==typeof require&&require;if(!l&&u)return u(i,!0);if(y)return y(i,!0);var s=new Error("Cannot find module '"+i+"'");throw s.code="MODULE_NOT_FOUND",s}var o=r[i]={exports:{}};t[i][0].call(o.exports,function(e){var r=t[i][1][e];return x(r?r:e)},o,o.exports,e,t,r,n)}return r[i].exports}for(var y="function"==typeof require&&require,i=0;i<n.length;i++)x(n[i]);return x}({1:[function(e,t,r){function n(e,t,r){return e*(1-r)+t*r}t.exports=n},{}],2:[function(e,t,r){function n(e,t,r,n){var x=n.x-r.x,y=n.y-r.y,i=t.x-e.x,l=t.y-e.y,u=e.x-r.x,o=e.y-r.y,E=y*i-x*l;if(0===E)return x*o-y*u!==0&&i*o-l*u!==0||e.x<r.x&&e.x<n.x&&t.x<r.x&&t.x<n.x||e.y<r.y&&e.y<n.y&&t.y<r.y&&t.y<n.y||e.x>r.x&&e.x>n.x&&t.x>r.x&&t.x>n.x||e.y>r.y&&e.y>n.y&&t.y>r.y&&t.y>n.y?{result:s.PARALLEL}:{x:1/0,y:1/0,result:s.COINCIDE};var c=(x*o-y*u)/E,I=(i*o-l*u)/E;return c>=0&&1>=c&&I>=0&&1>=I?{x:e.x+c*i,y:e.y+c*l,result:s.INTERSECT}:{result:s.OUTSIDE}}function x(e,t,r,n){var x=t.x-e.x,y=t.y-e.y,i=x*x+y*y,l=e.x-r.x,o=2*(x*l+y*(e.y-r.y)),E=r.x*r.x+r.y*r.y+e.x*e.x+e.y*e.y-2*(r.x*e.x+r.y*e.y)-n*n,c=o*o-4*i*E,I={entry:null,exit:null,tangent:null,intersections:[],result:null};if(0>c)I.result=s.OUTSIDE;else if(0===c){I.result=s.TANGENT;var T=-o/(2*i);I.tangent={x:u(e.x,t.x,T),y:u(e.y,t.y,T)}}else{var a=Math.sqrt(c),N=(-o+a)/(2*i),f=(-o-a)/(2*i);(0>N||N>1)&&(0>f||f>1)?I.result=0>N&&0>f||N>1&&f>1?s.OUTSIDE:s.INSIDE:(I.result=s.INTERSECT,N>=0&&1>=N&&(I.entry={x:u(e.x,t.x,N),y:u(e.y,t.y,N)},I.intersections.push(I.entry)),f>=0&&1>=f&&(I.exit={x:u(e.x,t.x,f),y:u(e.y,t.y,f)},I.intersections.push(I.exit)))}return I}function y(e,t,r,n){for(var y=[x(e,{x:t.x,y:e.y},r,n),x({x:t.x,y:e.y},t,r,n),x({x:e.x,y:t.y},{x:t.x,y:t.y},r,n),x({x:e.x,y:e.y},{x:e.x,y:t.y},r,n)],i={result:null,intersections:[],tangents:[]},l=4;l--;){var u=y[l];(null===i.result||i.result===s.INSIDE&&u.result===s.INTERSECT||i.result===s.TANGENT&&(u.result===s.INTERSECT||u.result===s.INSIDE)||i.result===s.OUTSIDE)&&(i.result=u.result),u.intersections.length>0&&(i.intersections=i.intersections.concat(u.intersections)),u.result===s.TANGENT&&i.tangents.push(u.tangent)}return i}function i(e,t,r){return t.x>e.x||r.x<e.x||t.y>e.y||r.y<e.y?{result:s.OUTSIDE}:{result:s.INSIDE}}function l(e,t,r,n){if(e.x>t.x||e.y>t.y){var x={x:e.x>t.x?t.x:e.x,y:e.y>t.y?t.y:e.y},y={x:e.x<t.x?t.x:e.x,y:e.y<t.y?t.y:e.y};e=x,t=y}if(r.x>n.x||r.y>n.y){var i={x:r.x>n.x?n.x:r.x,y:r.y>n.y?n.y:r.y},l={x:r.x<n.x?n.x:r.x,y:r.y<n.y?n.y:r.y};r=i,n=l}return e.x>n.x||t.x<r.x||e.y>n.y||t.y<r.y?{result:s.OUTSIDE}:{result:s.INTERSECT}}var u=e("lerp"),s=t.exports={lineLine:n,lineCircle:x,rectangleCircleSimple:y,pointRectangleSimple:i,rectangleRectangleSimple:l,INTERSECT:"intersect",INSIDE:"inside",OUTSIDE:"outside",COINCIDE:"coincide",PARALLEL:"parallel",TANGENT:"tangent"}},{lerp:1}],3:[function(e,t,r){function n(e){return{x:e.x+e.width,y:e.y+e.height}}function x(e,t){return y.rectangleRectangleSimple(e,n(e),t,n(t))}var y=e("./collision");t.exports={rectangleRectangleSimple:x,INTERSECT:y.INTERSECT,INSIDE:y.INSIDE,OUTSIDE:y.OUTSIDE,COINCIDE:y.COINCIDE,PARALLEL:y.PARALLEL,TANGENT:y.TANGENT}},{"./collision":2}]},{},[3]);